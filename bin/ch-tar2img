#!/bin/bash

. $(dirname "$0")/base.sh

set -e
#set -x

usage () {
    cat 1>&2 <<EOF

Convert a tarball into a mountable filesystem image suitable for chroot'ing.

Usage:

  $ $(basename $0) [--no-scan] TARBALL BUILDROOT

A squashfs image is saved in the same directory as the tarball. This image is
not mounted during the construction process.

A basic security scan, e.g. removal of setuid binaries and device files, is
performed, unless --no-scan is specified.

This script must be run as root.

EOF
    exit 1
}

while true; do
    case $1 in
        -h|--help)
            usage
            ;;
        --no-scan)
            NOSCAN='.NOSCAN'
            ;;
        *)
            break
            ;;
    esac
    shift
done

if [[ $# -ne 2 ]]; then
    usage
fi

TAR=$1
BUILDROOT=$2
if [[ ! -f $TAR ]]; then
    echo "not a regular file: $TAR" 1>&2
    exit 1
fi
if [[ ! -d $BUILDROOT ]]; then
    echo "not a directory: $TMPDIR" 1>&2
    exit 1
fi

IMG=$(echo $TAR | sed "s/\.tar\.gz/${NOSCAN}.img/")
TAR_ABS=$(readlink -f $TAR)
MOUNTPOINT=mnt
BLOCKSIZE=4096
GETCAP_OUTFILE=/tmp/getcap.$$
unset TMPDIR  # interferes with mktemp

# Populate
BUILDDIR=$(mktemp -d -p $BUILDROOT)
chmod 755 $BUILDDIR
cd $BUILDDIR
tar xf $TAR_ABS

# Create mount points expected by Charliecloud
mkdir -p mnt run

# Remove files that seem risky due to any of the following:
#
#   1. type not in the whitelist:
#        d  directories
#        f  regular files
#        l  symbolic links
#        p  named pipes
#   2. regular file with setuid or setgid bits set
#   3. regular file with setcap attribute
#
# As for the setcap attribute (a.k.a. POSIX file capabilities), this is a
# little tricky. GNU find does not currently support searching for file
# capabilities or actually extended attributes (xattrs) at all. We could parse
# getcap -r output to find setcap files, but that seems risky (e.g., filenames
# containing a newline). It seems that while GNU tar does store the setcap
# attributes, it does not currently extract them by default, so we should not
# see any output at all from getcap -r, which is what we test for.
if [[ $NOSCAN ]]; then
    echo "WARNING: not removing risky files"
else
    find -P -not \( -type d -o -type f -o -type l -o -type p \) -delete
    find -P -type f -perm /6000 -delete
    getcap -r . | head -1000 > $GETCAP_OUTFILE
    if [[ -s $GETCAP_OUTFILE ]]; then
        echo "setcap files found; see $GETCAP_OUTFILE for details" 1>&2
        exit 1
    fi
    rm $GETCAP_OUTFILE
fi

# Create squashfs
cd - > /dev/null
rm -f $IMG
mksquashfs $BUILDDIR $IMG -no-progress

# Make sure no setuid/gid files remain
# FIXME: does not find setcap files
if [[ ! $NOSCAN ]]; then
    if ( unsquashfs -ll $IMG | egrep -qi '^-..(s|...s)' ); then
        echo "setuid and/or setgid files found, aborting" 2>&1
        exit 1
    fi
fi

# Clean up
rm -Rf $BUILDDIR
chmod 440 $IMG
ls -lh $IMG
