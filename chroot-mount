#!/bin/bash

# Mount a chroot image and bind in appropriate supporting filesystems. Must
# run as root.

set -e
#set -x

IMAGE=$1
MOUNTDIR=$2
shift 2
MOREDIRS="$@"

MOUNTOPTS=loop,noatime,nodev,nosuid

function bindmount () {
    if [ -e $1 ]; then
        hostdir=$1
        guestdir=$MOUNTDIR$hostdir
        # Recursively bind-mount $hostdir into the chroot
        mount --rbind $hostdir $guestdir
        # Mark chroot mount as slave, i.e., (un)mounts in the guest don't
        # propagate to the main mount in the host, but (un)mounts in the host
        # propagate to the guest.
        mount --make-rslave $guestdir
    fi
}

mount -o $MOUNTOPTS $IMAGE $MOUNTDIR

bindmount /dev
bindmount /proc
bindmount /run
bindmount /sys
bindmount /tmp

bindmount /etc/passwd
bindmount /etc/group
bindmount /etc/hosts

for d in $MOREDIRS; do
    mkdir -p $MOUNTDIR$d
    bindmount $d
done
